Lecture 3: Virtualization in Cloud

Redundant Array of Inexpensive Disks (RAID)
- Disks have limited space: the biggest disk today is approximately 15TB.
- What if you need more than 15TB?
  - Creating bigger disks incurs nonlinear costs.
- Use virtualization: combine multiple physical disks to appear as one larger virtual disk.
World's biggest hard drive: Meet Western Digital's 15TB monster
Western Digital packs another terabyte into its 3.5-inch hard disk drives.
By Liam Tung | October 26, 2018--12:49 GMT (05:49 PDT) | Topic: Storage
**RAID (Redundant Array of Inexpensive Disks)**
- Disks have limited space: the biggest disk today is approximately 15TB.
- What if you need more than 15TB?
  - Creating bigger disks incurs nonlinear costs.
- Use virtualization: combine multiple physical disks to appear as one bigger virtual disk
Diagram:
A RAID system with six physical disks is depicted. These disks connect to a RAID controller, managing data storage and retrieval. The RAID controller presents the virtual disk as a single logical unit to the operating system.
The diagram illustrates data writing and reading processes in the RAID system. Data is striped across physical disks during writing, enhancing performance. During reading, data retrieval occurs in parallel from all disks, further optimizing performance.
Additionally, the RAID system ensures data redundancy. In case of a disk failure, the RAID controller can retrieve data from other disks and reconstruct the failed disk, safeguarding data integrity.
## RAID: a lot of advantages
- Size: enables creation of arbitrarily large disks
- Speed: optimally laid out data allows reading from multiple disks in parallel
- Cost: multiple inexpensive disks are more cost-effective than one large disk
The diagram demonstrates RAID's functionality, striping data across disks for improved speed and providing redundancy to ensure reliability.

---

### RAID 0
- Stripes data across disks
- For n disks of size S, total capacity becomes nS bytes
The diagram illustrates RAID 0's data striping mechanism, enhancing data access speed. However, RAID 0 lacks redundancy, resulting in total data loss if one disk fails.
## RAID 0 Problems
- Failure of one disk leads to the failure of the entire RAID array
- Assuming each disk has a failure probability p per month
- Probability of all n disks not failing: (1-p)^n
- For example, if p = 0.001 and n = 20, there's a 2% chance of RAID array failure each month
The diagram presents a RAID 0 array with six disks, illustrating the probability calculation for array failure due to disk failure.

---
Redundant Array of Inexpensive Disks: RAID 1
- Key idea: organize data to withstand failures
- Simplest approach: mirroring (RAID 1)
- Halves capacity but remains more economical than a single large disk
- Probability of two replicas failing: 1-(1-p^2)^(n/2)
- For instance, if p = 0.001 and n = 20, the chance of RAID array failure is ≈ 0.00001% each month
The diagram demonstrates RAID 1's mirroring concept, ensuring data availability even if one disk fails.
The Power of XOR
- XOR enables better recovery data methods than simple replication
- Exclusive OR (XOR) operation
- Example: with drives A and B, an additional drive C is calculated as C = A ⊕ B
- If B fails, recovery can be done using B = A ⊕ C
A	B	C
0	0	0
0	1	1
1	0	1
1	1	0
Diagram:
Blocks A and B are XORed to generate C. In case of B's failure, B can be recovered using A and C through XOR.

---
RAID 5: Resiliency With Less Cost
- RAID 5 stripes data across disks and reserves one disk's capacity as parity
- Parity is XOR of data sector across other drives
- Writes involve both data and parity, reducing storage by 1/n
- Requires two drives to fail: for n = 6 and p = 0.001, failure probability is approximately 0.000015
- In case of one drive failure, data can be reconstructed using parity bits
The diagram showcases RAID 5's operation, striping data across disks and using parity for redundancy.
Suppose there are 6 disks, including one parity disk. If disk 4 fails:
Question 1: Can reads still be serviced? If yes, how to read from disk 4?
Question 2: Can writes still be serviced? If yes, how to write to disk 4?
Question 3: How is disk 4 recovered?
The diagram illustrates a RAID 5 array with 6 disks and addresses the mentioned questions regarding disk failure and array operations.

---

Reed-Solomon Coding
- For scenarios with higher failure probabilities (e.g., thousands of drives)
- Reed-Solomon coding converts k data blocks into n, capable of recovering from any (n-k) failures
- Example: converting 223 data blocks into 255 enables recovery from any 32 failures
- Widely used in CDs, DVDs, QR codes, Mars Rovers, and most cloud storage systems
- RAID 6 utilizes Reed-Solomon for two parity drives
The diagram depicts how Reed-Solomon coding operates, dividing data into blocks and generating parity blocks for recovery.

RAID invented in 1988 (4 years after first Macintosh)
A Case for Redundant Arrays of Inexpensive Disks (RAID)
David A. Patterson, Garth Gibson, and Randy H. Katz
Computer Science Division
Department of Electrical Engineering and Computer Sciences
571 Evans Hall
