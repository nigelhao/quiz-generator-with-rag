Lecture 3: Virtualization in Cloud

Virtual Machine:
- Software that makes code (running in a process) think that it's running on raw hardware.
- A virtual machine monitor runs in the host operating system.
- It loads and runs disk images for guest operating systems.
- Operations in the guest operating system that are normally not allowed trap into the virtual machine monitor.
  - Guest operating system tries to change page tables.
  - Guest operating system tries to disable interrupts.
- Virtual machine monitor emulates the hardware.

---

Amazon Elastic Compute Cloud (EC2):
- Amazon computing service: a virtual computer is called an instance.
- Many different kinds of instances: general purpose, memory-optimized, compute-optimized, GPUs, etc.
- There's generally a full instance size, and you can have 1/2 of it.
- Four a1.large is the same as one a1.2xlarge.
- Two a 1.2x large is the same as one a1.4xlarge.
| VCPU | ECU | Memory (GiB) | Instance Storage (GB) | Linux/UNIX Usage |
|---|---|---|---|---|
| a1.medium | 1 | N/A | 2 GiB | EBS Only | $0.0255 per Hour |
| a1.large | 2 | N/A | 4 GiB | EBS Only | $0.051 per Hour |
| a1.xlarge | 4 | N/A | 8 GiB | EBS Only | $0.102 per Hour |
| a1.2xlarge | 8 | N/A | 16 GiB | EBS Only | $0.204 per Hour |
| a1.4xlarge | 16 | N/A | 32 GiB | EBS Only | $0.408 per Hour |
| a1.metal | 16 | N/A | 32 GiB | EBS Only | $0.408 per Hour |

---

Virtual Machine Advantages:
- Move whole images anywhere: completely decouple all software from hardware.
- Can replicate computer images: run more copies.
- If your service is overloaded, scale out by spinning up more instances.
- Can arbitrarily start/stop/resume instances very quickly.
- Must faster than shutting down machines.
- Complete software encapsulation.
- Common technique used in software tutorials: download this VM image and run it.
- Web hosting: one server can run 100 virtual machines, each one thinks it has a complete, independent computer to configure and use.
- Complete software isolation.
- In theory, two VMs are completely isolated, can maybe only sense something due to timing (e.g., if they are sharing a CPU), more on this later.
- Enabled us to have cloud computing.
- Original business case was the desktop! E.g., need to run Windows and Linux in parallel, don't want 2 machines.

---

Modern Virtual Machines Invented in 1997:
Using the SimOS Machine Simulator to Study Complex Computer Systems by MENDEL ROSENBLUM, EDOUARD BUGNION, SCOTT DEVINE, and STEPHEN A. HERROD from the Computer Systems Laboratory, Stanford University.

SimOS is an environment for studying the hardware and software of computer systems. SimOS simulates the hardware of a computer system in enough detail to boot a commercial operating system and run realistic workloads on top of it. This paper identifies two challenges that machine simulators such as SimOS must overcome in order to effectively analyze large complex workloads: handling long workload execution times and collecting data effectively. To study long-running workloads, SimOS includes multiple interchangeable simulation models for each hardware component. By selecting the appropriate combination of simulation models, the user can explicitly control the tradeoff between simulation speed and simulation detail. To handle the large amount of low-level data generated by the hardware simulation models, SimOS contains flexible annotation and event classification mechanisms that map the data back to concepts meaningful to the user. SimOS has been extensively used to study new computer hardware designs, to analyze application performance, and to study operating systems. We include two case studies that demonstrate how a low-level machine simulator such as SimOS can be used to study large and complex workloads.

---

Latency Numbers Every Programmer Should Know by Peter Norvig and Jeff Dean:
- L1 cache reference - 0.5ns
- Branch mispredict - 5ns
- L2 cache reference - 7ns
- Mutex lock/unlock - 25ns
- Main memory reference - 100ns
- Compress 1K with Zippy - 3,000ns (3us)
- Send 1K over 1Gbps network - 10,000ns (10us)
- Read 4K randomly from SSD - 150,000ns (150us)
- Round trip within a datacenter - 250,000ns (250us)
- Read 1MB sequentially from RAM - 500,000ns (500us)
- Read 1MB sequentially from SSD - 1,000,000ns (1,000us) (1ms)
- Hard disk seek - 10,000,000ns (10,000us) (10ms)
- Read 1MB sequentially from disk - 20,000,000ns (20,000us) (20ms)
- Send packet CA->Netherlands->CA - 150,000,000ns (150,000us) (150ms)

Caching:
Performance optimization by keeping a copy of some data usually closer to where the data is needed or something that might be reused (don't recompute). Used everywhere in computer systems such as Registers, Processor caches, File system buffer cache, DNS caching, memcached, Database page cache, Spark analytics framework, Web browser page/image cache, Phone email/SMS cache.
Why Is Caching Useful?
There is a basic tradeoff in performance and size:
- If you make it bigger, it's slower.
  - Takes longer to get to (due to size).
  - Addressing it is more complex (more bits to switch on).
- Faster storage is more expensive.
  - 16GB RAM: $59.99
  - 1TB HDD: $59.99
  - 4TB HDD: $116.99
  - 4TB SSD: $499.99
Think about the places your web page might be stored...
The diagram shows the different levels of caching, from the CPU cache to the web cache. Each level of caching is closer to the user than the previous level, and therefore has a lower latency. This means that data that is frequently accessed can be retrieved more quickly from a higher level of the cache. The different caching levels are as follows:
- CPU cache: The CPU cache is the smallest and fastest level of caching. It is located on the CPU die and is used to store frequently accessed data and instructions.
- Memory cache: The memory cache is larger than the CPU cache and is used to store data that is not currently being used by the CPU.
- Web cache: The web cache is used to store web pages and other web content. It is located on the web server and is used to improve the performance of web browsing.
- Proxy cache: The proxy cache is used to store web pages and other web content that is frequently accessed by users. It is located on a proxy server, which is a server that sits between the
