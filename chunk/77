Lecture 5b: Cloud Security

**Asymmetric Key Cryptography**
Also called Public Key Cryptography. A pair of keys are used:
- Public key: used for encryption
- Private key: used for decryption. Only known to the owner. Only the corresponding private key can decrypt

**RSA**
The most popular and proven asymmetric key cryptography algorithm, by Rivest, Shamir, and Adleman of MIT, 1977. It relies on a mathematical fact that it's easy to find and multiply two large prime numbers, but it's extremely difficult to factor their product back into two primes.

**RSA - Key generation**
1. Choose two large prime numbers P and Q. P=7, Q=17
2. Calculate N=P*Q. N=119
3. Select the public key E such that it is not a factor of (P-1)(Q-1). (P-1)(Q-1)=6*16. Let's choose E=5
4. Select the private key D such that the following is true: (D*E) mod (P-1)(Q-1) = 1. Let's choose D=77, because 77*5 mod 96 = 1

**RSA - En/decryption**
Suppose the keys are generated by Bob. Bob gives Alice its public key E and the number N.
Alice wants to send a character "F" to Bob. She'll use Bob's public key to encrypt it.
CT = PTE mod N = PTE mod P*Q
Alice sends 65 mod 119 = 41
Bob uses the following: PT = CTD mod N
Bob gets 4177 mod 119 = 6
- For an attacker to crack the message, he needs to find the values of P and Q using N. This is extremely difficult for large primes.
- Takes more than 70 years if N is 100 digits.
- If Alice and Bob use RSA, it'll be difficult to crack their communication.
- "Factoring as a Service" (https://eprint.iacr.org/2015/1000.pdf), published in 2015, used Amazon EC2 cloud resources to factorize a 512-bit RSA modulus in just four hours for $75. What are the implications for network security?
