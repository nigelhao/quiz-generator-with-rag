Lecture 4: Cloud CPU Scheduling

## **SEDF - schedulability**
Any VM set is schedulable by SEDF if and only if (iff)
$$\Sigma_{i} \frac{S_i}{P_i} < 1$$
â–º Run the schedulability test first before admitting a new VM

 **SEDF - time granularity**
The time granularity of the period impacts scheduler fairness.
Example: VM 1: (2,4,0), VM 2: (2,7,0)
In the above example, there are two virtual machines, VM1 and VM2. VM1 has a period of 2ms and an execution time of 4ms. VM2 has a period of 2ms and an execution time of 7ms. The time granularity is 1ms.
If the time granularity is too small, then the scheduler will be unfair to VM1. This is because VM1 will only be able to run for 4ms out of every 7ms, while VM2 will be able to run for 7ms out of every 7ms.
If the time granularity is too large, then the scheduler will be unfair to VM2. This is because VM2 will have to wait for a long time before it can run.
The optimal time granularity is one that is fair to both VM1 and VM2. In this example, a time granularity of 4ms would be fair. This is because VM1 would be able to run for 4ms out of every 7ms, and VM2 would be able to run for 3ms out of every 7ms.
The image shows two virtual machines (VM1 and VM2) running on a single physical machine. The x-axis represents time, and the y-axis represents the memory address. Each VM has its own memory space, and the memory addresses are shown in hexadecimal.
VM1 is running a program that accesses memory addresses 2, 4, and 0 in that order. VM2 is running a program that accesses memory addresses 2, 7, and 0 in that order. The red boxes indicate the memory addresses that are being accessed by the VMs.
At time 0, both VMs are accessing memory address 2. At time 1, VM1 is accessing memory address 4, while VM2 is still accessing memory address 2. At time 2, VM1 is accessing memory address 0, while VM2 is accessing memory address 7. At time 3, both VMs are accessing memory address 0.

SEDF - work-conserving
In WC mode (x_i = 1), a VM is always runnable (given it has work to do). r_i is reset to s_i immediately after it reduces to 0, and d_i is incremented by p_i at the same time.
The slack CPU time is allocated to VMs (whose x_i=1) in a weighted fair sharing manner.
Diagrams show two virtual machines (VM) each with different sets of parameters.
VM1 and VM2 both have a parameter set of (1,2,0) and (1,4,0) respectively.
The second set of parameters for VM1 and VM2 are (1,2,1) and (1,4,1) respectively.
Q: what about the following case?
VM 1: (1,2,1), VM 2: (1,4,0)
Q: or this one?
VM 1: (1,2,0), VM 2: (1,4,1)
